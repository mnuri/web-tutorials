name: linters

on:
  - pull_request

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version:
          - '3.12'
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Run linters & friends
        run: make ci-lint

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version:
          - '3.12'
          - '3.13'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Run tests
        run: make ci-test
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432


  pip-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version:
          - '3.12'
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Analysing the dependencies with pip-audit
        run: make ci-deps-audit
